[{"/Users/Vince/Desktop/covid-tracker/src/index.js":"1","/Users/Vince/Desktop/covid-tracker/src/App.js":"2","/Users/Vince/Desktop/covid-tracker/src/components/Cards/Cards.jsx":"3","/Users/Vince/Desktop/covid-tracker/src/components/Chart/Chart.jsx":"4","/Users/Vince/Desktop/covid-tracker/src/components/index.js":"5","/Users/Vince/Desktop/covid-tracker/src/components/CountryPicker/CountryPicker.jsx":"6","/Users/Vince/Desktop/covid-tracker/src/api/index.js":"7"},{"size":147,"mtime":1607282762387,"results":"8","hashOfConfig":"9"},{"size":1147,"mtime":1607409099653,"results":"10","hashOfConfig":"9"},{"size":2745,"mtime":1607386053510,"results":"11","hashOfConfig":"9"},{"size":1686,"mtime":1607447835694,"results":"12","hashOfConfig":"9"},{"size":174,"mtime":1607291431273,"results":"13","hashOfConfig":"9"},{"size":846,"mtime":1607449696800,"results":"14","hashOfConfig":"9"},{"size":1675,"mtime":1607449497992,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10lm4e",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Vince/Desktop/covid-tracker/src/index.js",[],"/Users/Vince/Desktop/covid-tracker/src/App.js",[],"/Users/Vince/Desktop/covid-tracker/src/components/Cards/Cards.jsx",[],["32","33"],"/Users/Vince/Desktop/covid-tracker/src/components/Chart/Chart.jsx",["34"],"import React, { useState, useEffect } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport { fetchDailyData } from \"../../api\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = () => {\n  //   // you set your State using const\n  //   // dailyData will be the state, setDailyData will be setting the state\n  //   // useState(some value) : some value will be the initial value youre setting state to\n  //   const [dailyData, setDailyData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchDailyDataApi = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchDailyDataApi();\n  }, []);\n\n\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) =>\n          new Date(date).toLocaleDateString()\n        ),\n        datasets: [\n          {\n            data: dailyData.map((data) => data.confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map((data) => data.deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n            fill: true,\n          },\n          {\n            data: dailyData.map((data) => data.recovered),\n            label: \"Recovered\",\n            borderColor: \"green\",\n            backgroundColor: \"rgba(0, 255, 0, 0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>\n      {lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","/Users/Vince/Desktop/covid-tracker/src/components/index.js",[],"/Users/Vince/Desktop/covid-tracker/src/components/CountryPicker/CountryPicker.jsx",[],"/Users/Vince/Desktop/covid-tracker/src/api/index.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":2,"column":16,"nodeType":"41","messageId":"42","endLine":2,"endColumn":19},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'Bar' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]